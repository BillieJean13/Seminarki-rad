{"ast":null,"code":"var _jsxFileName = \"/Users/elenaderic/Desktop/CHAT App - Elena/src/Components/Login/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Button/Button';\nimport blankAvatar from '../../Assets/blankAvatar.png';\nimport Card from '../Card/Card';\nimport avatarAstronaut from \"../../Assets/avatarAstronaut.svg\";\nimport avatarNinja from \"../../Assets/avatarNinja.svg\";\nimport avatarDetective from \"../../Assets/avatarDetective.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState('');\n  const [usernameIsValid, setUsernameIsValid] = useState(1); //prvotno je truth-y kako stilovi nebi zacrvenili sve kao da ne valja, tek se kasnije provjerava ako je zapravo Valid\n\n  const [avatar, setAvatar] = useState(blankAvatar); //makni enteredUsername pa za provjeru i sve stavi user\n\n  useEffect(() => {\n    console.log(props.user);\n  }, [props.user]); //provjera username-a\n\n  const handleAddUser = event => {\n    console.log(\"ovo je user\");\n    console.log(props.user);\n    event.preventDefault();\n\n    if (props.user.username.trim().length === 0) {\n      //ako je vrijednost u enteredUsername prazna kada se uklone razmaci\n      setUsernameIsValid(false); //postavi da to nije valjani username\n\n      return;\n    }\n\n    setUsernameIsValid(true);\n    props.onLogin(avatar, props.user.username); //ako username valja, poziva loginHandler funkciju iz App.js-a koji postavlja da je korisnik ulogiran te se prikazuje chat a miče login\n  }; //promjena username-a\n\n\n  const handleUsernameChange = event => {\n    //bilo kojim unosom u input se mijenja username\n    props.setUser(prevValues => ({ ...prevValues,\n      username: event.target.value\n    }));\n  }; //promjena boje\n\n\n  const handleColorChange = event => {\n    props.setUser(prevValues => ({ ...prevValues,\n      randomColor: event.target.value\n    }));\n  };\n\n  const submitUser = () => {\n    props.setUsernameSubmitted(true);\n  }; //provjera koji je avatar odabran te se taj postavlja\n\n\n  const handleAvatar = avatar => {\n    console.log(avatar);\n    let userAvatar;\n\n    switch (avatar) {\n      case 1:\n        userAvatar = avatarAstronaut;\n        break;\n\n      case 2:\n        userAvatar = avatarNinja;\n        break;\n\n      default:\n        userAvatar = avatarDetective;\n        break;\n    }\n\n    props.setUser(prevValues => ({ ...prevValues,\n      avatar: userAvatar,\n      avatarId: avatar\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: !usernameIsValid ? \"login invalid\" : \"login\" //određuje stilove, a Card više ne treba no neda mi se mijenjati i brisati sad, praktički je glorified div\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddUser,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputText\",\n        type: \"text\",\n        placeholder: \"Nickname\",\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `item ${props.user.avatarId === 1 ? 'active' : ''}`,\n          onClick: () => handleAvatar(1),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarAstronaut,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `item ${props.user.avatarId === 2 ? 'active' : ''}`,\n          onClick: () => handleAvatar(2),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarNinja,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `item ${props.user.avatarId === 3 ? 'active' : ''}`,\n          onClick: () => handleAvatar(3),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarDetective,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputColor\",\n        type: \"color\",\n        onChange: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: submitUser,\n        children: \"Join Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"QPQWVFVphSl6G1eb7P4kQtNU7l0=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/elenaderic/Desktop/CHAT App - Elena/src/Components/Login/Login/Login.js"],"names":["React","useEffect","useState","Button","blankAvatar","Card","avatarAstronaut","avatarNinja","avatarDetective","Login","props","enteredUsername","setEnteredUsername","usernameIsValid","setUsernameIsValid","avatar","setAvatar","console","log","user","handleAddUser","event","preventDefault","username","trim","length","onLogin","handleUsernameChange","setUser","prevValues","target","value","handleColorChange","randomColor","submitUser","setUsernameSubmitted","handleAvatar","userAvatar","avatarId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nimport blankAvatar from '../../Assets/blankAvatar.png';\r\nimport Card from '../Card/Card';\r\n\r\nimport avatarAstronaut from \"../../Assets/avatarAstronaut.svg\"\r\nimport avatarNinja from \"../../Assets/avatarNinja.svg\"\r\nimport avatarDetective from \"../../Assets/avatarDetective.svg\"\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n    const [enteredUsername, setEnteredUsername] = useState('');\r\n    const [usernameIsValid, setUsernameIsValid] = useState(1); //prvotno je truth-y kako stilovi nebi zacrvenili sve kao da ne valja, tek se kasnije provjerava ako je zapravo Valid\r\n    \r\n    const [avatar, setAvatar] = useState(blankAvatar);\r\n//makni enteredUsername pa za provjeru i sve stavi user\r\nuseEffect(() => {\r\nconsole.log(props.user);\r\n}, [props.user])\r\n\r\n    //provjera username-a\r\n    const handleAddUser = (event) => {\r\n      console.log(\"ovo je user\")\r\n      console.log(props.user)\r\n        event.preventDefault();\r\n        if (props.user.username.trim().length === 0) { //ako je vrijednost u enteredUsername prazna kada se uklone razmaci\r\n          setUsernameIsValid(false); //postavi da to nije valjani username\r\n          return;\r\n        }\r\n        setUsernameIsValid(true);\r\n        props.onLogin(avatar, props.user.username); //ako username valja, poziva loginHandler funkciju iz App.js-a koji postavlja da je korisnik ulogiran te se prikazuje chat a miče login\r\n      };\r\n\r\n      //promjena username-a\r\n      const handleUsernameChange = (event) => { //bilo kojim unosom u input se mijenja username\r\n        props.setUser(prevValues => (\r\n          {...prevValues,  username: event.target.value})\r\n          )\r\n      };\r\n\r\n      \r\n\r\n      //promjena boje\r\n      const handleColorChange = (event) => {\r\n        props.setUser(prevValues => (\r\n          {...prevValues,  randomColor: event.target.value})\r\n          )\r\n      }\r\n      const submitUser = () => {\r\n        props.setUsernameSubmitted(true)\r\n      }\r\n\r\n      //provjera koji je avatar odabran te se taj postavlja\r\n      const handleAvatar = (avatar) => {\r\n        console.log(avatar);\r\n        let userAvatar\r\n    \r\n        switch (avatar) {\r\n          case 1: userAvatar = avatarAstronaut; break;\r\n          case 2: userAvatar = avatarNinja; break;\r\n          default: userAvatar = avatarDetective; break;\r\n        }\r\n    \r\n        props.setUser(prevValues => ({ ...prevValues, avatar: userAvatar, avatarId: avatar}))\r\n      }\r\n    \r\n\r\n    return(\r\n        <Card\r\n            className={\r\n                !usernameIsValid ? \"login invalid\" : \"login\"  //određuje stilove, a Card više ne treba no neda mi se mijenjati i brisati sad, praktički je glorified div\r\n            }\r\n            >\r\n          <form onSubmit={handleAddUser}>\r\n              <h1>Chat Application</h1>\r\n              <label>Your Nickname</label>\r\n              <input className=\"inputText\"\r\n              type='text'\r\n              placeholder='Nickname'\r\n              onChange={handleUsernameChange}\r\n              /> \r\n              <label>Your Avatar</label>\r\n              <div className=\"avatars\">\r\n                <div className={`item ${props.user.avatarId === 1 ? 'active' : ''}`} onClick={() => handleAvatar(1)}> {/*provjerava koji je avatar kliknut, određuje stil za njega te ga postavlja na korisnika*/}\r\n                  <img src={avatarAstronaut} alt=\"\" />\r\n                </div>\r\n                <div className={`item ${props.user.avatarId === 2 ? 'active' : ''}`} onClick={() => handleAvatar(2)}>\r\n                  <img src={avatarNinja} alt=\"\" />\r\n                </div>\r\n                <div className={`item ${props.user.avatarId === 3 ? 'active' : ''}`} onClick={() => handleAvatar(3)}>\r\n                  <img src={avatarDetective} alt=\"\" />\r\n                </div>\r\n              </div>\r\n              \r\n              <label>Select Color</label>\r\n              <input className=\"inputColor\" type=\"color\" onChange={handleColorChange}></input>\r\n              {/*mijenja username i boju sa svakom promjenom */}\r\n              <Button type='submit' onClick={submitUser}>Join Chat</Button>\r\n          </form>\r\n        </Card>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}