{"ast":null,"code":"var _jsxFileName = \"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena \\u0110eric\\u0301/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Input from \"./Components/Chat Messages/Input\";\nimport Message from \"./Components/Chat Messages/Message\";\nimport Login from './Components/Login/Login';\nimport avatarWoman from \"./Components/Assets/Avatar04.svg\";\nimport avatarMan from \"./Components/Assets/Avatar06.svg\";\nimport avatarGirl from \"./Components/Assets/Avatar07.svg\";\nimport avatarBoy from \"./Components/Assets/Avatar05.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction randomColor() {\n  return \"#\" + Math.floor(Math.random() * 0xffffff).toString(16);\n}\n\nfunction Emoji() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Emoji Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Emoji;\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({\n    username: '',\n    color: randomColor(),\n    avatar: avatarMan,\n    avatarId: 0\n  });\n  const [messageArray, setMessageArray] = useState([]);\n  const [drone, setDrone] = useState();\n  const [userID, setUserID] = useState();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n  useEffect(() => {\n    if (usernameSubmitted) {\n      console.log(`ovo je to ${usernameSubmitted}`);\n      const drone = new window.Scaledrone(\"feNvXbkiduwaGrAy\", {\n        data: user\n      });\n      setDrone(drone);\n    }\n  }, [usernameSubmitted]);\n  useEffect(() => {\n    if (drone) {\n      drone.on(\"open\", error => {\n        if (error) {\n          console.log(\"Error on connecting\", error);\n        }\n\n        const chatRoom = drone.subscribe(\"observable-room\");\n        chatRoom.on(\"open\", error => {\n          if (error) {\n            return console.error(error);\n          }\n        });\n        chatRoom.on(\"data\", (text, chatUser) => {\n          setUserID(drone.clientId);\n          const username = chatUser.clientData.username;\n          const chatUserID = chatUser.id;\n          const userColor = chatUser.clientData.color;\n          const userAvatar = chatUser.clientData.avatar;\n          const timeStamp = new Date();\n          console.log(`text je ${text}`);\n          setMessageArray(oldArray => [...oldArray, {\n            text,\n            username,\n            userColor,\n            chatUserID,\n            user,\n            timeStamp,\n            userAvatar\n          }]);\n        });\n      });\n    }\n  }, [drone]);\n\n  const onSendMessage = message => {\n    if (message) {\n      drone.publish({\n        room: \"observable-room\",\n        message\n      });\n    }\n  };\n\n  const loginHandler = username => {\n    setIsLoggedIn(true);\n    console.log('User', username, 'connected!');\n  };\n\n  useEffect(() => {\n    console.log(\"user\");\n    console.log(user);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n      user: user,\n      setUser: setUser,\n      randomColor: randomColor,\n      usernameSubmitted: usernameSubmitted,\n      setUsernameSubmitted: setUsernameSubmitted,\n      onLogin: loginHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Chat App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          messages: messageArray,\n          userID: userID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onSendMessage: onSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"D5BzWUL+h95t7whLC7p0xDh9AhM=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Emoji\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/App.js"],"names":["useState","useEffect","Input","Message","Login","avatarWoman","avatarMan","avatarGirl","avatarBoy","randomColor","Math","floor","random","toString","Emoji","App","user","setUser","username","color","avatar","avatarId","messageArray","setMessageArray","drone","setDrone","userID","setUserID","isLoggedIn","setIsLoggedIn","usernameSubmitted","setUsernameSubmitted","console","log","window","Scaledrone","data","on","error","chatRoom","subscribe","text","chatUser","clientId","clientData","chatUserID","id","userColor","userAvatar","timeStamp","Date","oldArray","onSendMessage","message","publish","room","loginHandler"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;;;AAIA,SAASC,WAAT,GAAuB;AACrB,SAAO,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAb;AACD;;AAED,SAASC,KAAT,GAAiB;AACf,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,K;;AAQT,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAC/BkB,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAEV,WAAW,EAFa;AAG/BW,IAAAA,MAAM,EAAEd,SAHuB;AAI/Be,IAAAA,QAAQ,EAAE;AAJqB,GAAD,CAAhC;AAOA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,EAAlC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,EAApC;AAEA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,KAAD,CAA5C;AAGA,QAAM,CAAC8B,iBAAD,EAAoBC,oBAApB,IAA4C/B,QAAQ,CAAC,KAAD,CAA1D;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG6B,iBAAH,EAAqB;AACnBE,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYH,iBAAkB,EAA3C;AACA,YAAMN,KAAK,GAAG,IAAIU,MAAM,CAACC,UAAX,CAAsB,kBAAtB,EAA0C;AACtDC,QAAAA,IAAI,EAAEpB;AADgD,OAA1C,CAAd;AAGAS,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AAEF,GATQ,EASN,CAACM,iBAAD,CATM,CAAT;AAWF7B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACa,EAAN,CAAS,MAAT,EAAkBC,KAAD,IAAW;AAC1B,YAAIA,KAAJ,EAAW;AACTN,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,KAAnC;AACD;;AAID,cAAMC,QAAQ,GAAGf,KAAK,CAACgB,SAAN,CAAgB,iBAAhB,CAAjB;AAEAD,QAAAA,QAAQ,CAACF,EAAT,CAAY,MAAZ,EAAqBC,KAAD,IAAW;AAC7B,cAAIA,KAAJ,EAAW;AACT,mBAAON,OAAO,CAACM,KAAR,CAAcA,KAAd,CAAP;AACD;AAEF,SALD;AAOAC,QAAAA,QAAQ,CAACF,EAAT,CAAY,MAAZ,EAAoB,CAACI,IAAD,EAAOC,QAAP,KAAoB;AACrCf,UAAAA,SAAS,CAACH,KAAK,CAACmB,QAAP,CAAT;AAGD,gBAAMzB,QAAQ,GAAGwB,QAAQ,CAACE,UAAT,CAAoB1B,QAArC;AACA,gBAAM2B,UAAU,GAAGH,QAAQ,CAACI,EAA5B;AACA,gBAAMC,SAAS,GAAGL,QAAQ,CAACE,UAAT,CAAoBzB,KAAtC;AACA,gBAAM6B,UAAU,GAAGN,QAAQ,CAACE,UAAT,CAAoBxB,MAAvC;AACA,gBAAM6B,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AAEAlB,UAAAA,OAAO,CAACC,GAAR,CAAa,WAAUQ,IAAK,EAA5B;AAEAlB,UAAAA,eAAe,CAAE4B,QAAD,IAAc,CAC5B,GAAGA,QADyB,EAE5B;AAAEV,YAAAA,IAAF;AAAQvB,YAAAA,QAAR;AAAkB6B,YAAAA,SAAlB;AAA6BF,YAAAA,UAA7B;AAAyC7B,YAAAA,IAAzC;AAA+CiC,YAAAA,SAA/C;AAA0DD,YAAAA;AAA1D,WAF4B,CAAf,CAAf;AAID,SAhBD;AAiBD,OAjCD;AAkCD;AACF,GArCQ,EAqCN,CAACxB,KAAD,CArCM,CAAT;;AAuCE,QAAM4B,aAAa,GAAIC,OAAD,IAAa;AACjC,QAAIA,OAAJ,EAAa;AACX7B,MAAAA,KAAK,CAAC8B,OAAN,CAAc;AACZC,QAAAA,IAAI,EAAE,iBADM;AAEZF,QAAAA;AAFY,OAAd;AAID;AACF,GAPD;;AASA,QAAMG,YAAY,GAAItC,QAAD,IAAc;AACjCW,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBf,QAApB,EAA8B,YAA9B;AACD,GAHD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACC,GAHM,EAGJ,CAACA,IAAD,CAHI,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACC,CAACY,UAAD,iBAAe,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEZ,IAAb;AAAmB,MAAA,OAAO,EAAEC,OAA5B;AAAqC,MAAA,WAAW,EAAER,WAAlD;AAA+D,MAAA,iBAAiB,EAAEqB,iBAAlF;AAAqG,MAAA,oBAAoB,EAAEC,oBAA3H;AAAiJ,MAAA,OAAO,EAAEyB;AAA1J;AAAA;AAAA;AAAA;AAAA,YADhB,EAEC5B,UAAU,iBAET;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEN,YAAnB;AAAiC,UAAA,MAAM,EAAEI;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,aAAa,EAAE0B;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3GQrC,G;;MAAAA,G;AA6GT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Input from \"./Components/Chat Messages/Input\";\r\nimport Message from \"./Components/Chat Messages/Message\";\r\nimport Login from './Components/Login/Login';\r\n\r\nimport avatarWoman from \"./Components/Assets/Avatar04.svg\"\r\nimport avatarMan from \"./Components/Assets/Avatar06.svg\"\r\nimport avatarGirl from \"./Components/Assets/Avatar07.svg\"\r\nimport avatarBoy from \"./Components/Assets/Avatar05.svg\"\r\n\r\n\r\n\r\nfunction randomColor() { \r\n  return \"#\" + Math.floor(Math.random() * 0xffffff).toString(16);\r\n}\r\n\r\nfunction Emoji() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h3>Add Emoji Picker</h3>\r\n    </div> \r\n  );\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    color: randomColor(),\r\n    avatar: avatarMan, \r\n    avatarId: 0\r\n  });\r\n\r\n  const [messageArray, setMessageArray] = useState([]); \r\n  const [drone, setDrone] = useState(); \r\n  const [userID, setUserID] = useState(); \r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); \r\n\r\n  \r\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if(usernameSubmitted){\r\n      console.log(`ovo je to ${usernameSubmitted}`)\r\n      const drone = new window.Scaledrone(\"feNvXbkiduwaGrAy\", { \r\n        data: user,\r\n      });\r\n      setDrone(drone);\r\n    }\r\n    \r\n  }, [usernameSubmitted]); \r\n\r\nuseEffect(() => {\r\n  if (drone) {  \r\n    drone.on(\"open\", (error) => {\r\n      if (error) {\r\n        console.log(\"Error on connecting\", error);\r\n      }\r\n\r\n     \r\n\r\n      const chatRoom = drone.subscribe(\"observable-room\"); \r\n\r\n      chatRoom.on(\"open\", (error) => { \r\n        if (error) {\r\n          return console.error(error);\r\n        }\r\n        \r\n      });\r\n\r\n      chatRoom.on(\"data\", (text, chatUser) => { \r\n         setUserID(drone.clientId);\r\n        \r\n\r\n        const username = chatUser.clientData.username; \r\n        const chatUserID = chatUser.id;\r\n        const userColor = chatUser.clientData.color;\r\n        const userAvatar = chatUser.clientData.avatar;\r\n        const timeStamp = new Date()\r\n\r\n        console.log(`text je ${text}`)\r\n        \r\n        setMessageArray((oldArray) => [\r\n          ...oldArray,\r\n          { text, username, userColor, chatUserID, user, timeStamp, userAvatar }, \r\n        ]);\r\n      });\r\n    });\r\n  }\r\n}, [drone])\r\n\r\n  const onSendMessage = (message) => { \r\n    if (message) {\r\n      drone.publish({\r\n        room: \"observable-room\",\r\n        message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const loginHandler = (username) => {\r\n    setIsLoggedIn(true); \r\n    console.log('User', username, 'connected!');\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log(\"user\")\r\n    console.log(user)\r\n    }, [user]) \r\n\r\n  return (\r\n    <div className=\"App\">\r\n    {!isLoggedIn && <Login user={user} setUser={setUser} randomColor={randomColor} usernameSubmitted={usernameSubmitted} setUsernameSubmitted={setUsernameSubmitted} onLogin={loginHandler}/>} \r\n    {isLoggedIn && \r\n      \r\n      <>\r\n        <div className=\"App-header\">\r\n          <h1>My Chat App</h1>\r\n        </div>\r\n        <div>\r\n          <Message messages={messageArray} userID={userID}/>\r\n          <Input onSendMessage={onSendMessage} />\r\n        </div>\r\n      </>\r\n    } \r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}