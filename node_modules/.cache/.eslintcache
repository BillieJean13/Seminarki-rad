[{"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/index.js":"1","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/App.js":"2","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/reportWebVitals.js":"3","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Chat Messages/Message.js":"4","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Chat Messages/Input.js":"5","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Login/Login.js":"6","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Login/nouns.js":"7","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Login/adjectives.js":"8","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Chat Messages/Emoji.js":"9"},{"size":517,"mtime":1650911845054,"results":"10","hashOfConfig":"11"},{"size":2966,"mtime":1650911544092,"results":"12","hashOfConfig":"11"},{"size":0,"mtime":1649864228000,"results":"13","hashOfConfig":"11"},{"size":1162,"mtime":1650911580671,"results":"14","hashOfConfig":"11"},{"size":701,"mtime":1650911630435,"results":"15","hashOfConfig":"11"},{"size":4339,"mtime":1650911685771,"results":"16","hashOfConfig":"11"},{"size":890,"mtime":1650301375925,"results":"17","hashOfConfig":"11"},{"size":939,"mtime":1650301591230,"results":"18","hashOfConfig":"11"},{"size":965,"mtime":1650911640465,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"22c8gx",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/index.js",[],[],"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/App.js",["51","52","53","54","55"],[],"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/reportWebVitals.js",[],[],["56","57"],"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Chat Messages/Message.js",["58","59","60"],[],"import React, { useRef, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nconst Message = ({ messages, userID }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"Messages-list\">\r\n        {messages.map((key) => {\r\n          const timeStamp = { \r\n            hours: key.timeStamp.getHours(),\r\n            minutes: key.timeStamp.getMinutes() < 10 ? '0' + key.timeStamp.getMinutes() : key.timeStamp.getMinutes()\r\n          }\r\n          return(\r\n          <div key={messages.indexOf(key)} className={(key.chatUserID === userID) \r\n            ? \"Messages-message currentMember\"\r\n            : \"Messages-message otherMember\"}>\r\n            {}\r\n            <img src={key.userAvatar} alt=\" \" className=\"avatar\" style={{backgroundColor: `${key.userColor}`}}/>\r\n            <div className=\"Message-content\">\r\n              <div className=\"username\">{key.username}</div>\r\n              <div className=\"timestamp\">{timeStamp.hours}:{timeStamp.minutes}</div>\r\n              <div className=\"text\">{key.text}</div>\r\n            </div>\r\n            \r\n          </div>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Chat Messages/Input.js",[],[],"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Login/Login.js",["61","62","63","64"],[],"import React, { useEffect, useState } from 'react';\r\n\r\nimport avatarWoman from \"../Assets/Avatar04.svg\"\r\nimport avatarMan from \"../Assets/Avatar06.svg\"\r\nimport avatarGirl from \"../Assets/Avatar07.svg\"\r\nimport avatarBoy from \"../Assets/Avatar05.svg\"\r\n\r\nimport adjectives from './adjectives';\r\nimport nouns from './nouns';\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n    const [enteredUsername, setEnteredUsername] = useState('');\r\n    const [usernameIsValid, setUsernameIsValid] = useState(1); \r\n    \r\n    const [avatar, setAvatar] = useState(avatarMan);\r\n\r\n    function randomName() {\r\n      const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\r\n      const noun = nouns[Math.floor(Math.random() * nouns.length)];\r\n      return adjective + noun;\r\n    }\r\n\r\nuseEffect(() => {\r\nconsole.log(props.user);\r\n}, [props.user])\r\n\r\n    \r\n    const handleAddUser = (event) => {\r\n      console.log(\"ovo je user\")\r\n      console.log(props.user)\r\n        event.preventDefault();\r\n        if (props.user.username.trim().length === 0) { \r\n          setUsernameIsValid(false); \r\n          alert(\"Incorrect username\")\r\n          return;\r\n        }\r\n        setUsernameIsValid(true);\r\n        props.onLogin(props.user.username); \r\n      };\r\n\r\n      \r\n      const handleUsernameChange = (event) => { \r\n        props.setUser(prevValues => (\r\n          {...prevValues,  username: event.target.value})\r\n          )\r\n      };\r\n\r\n      \r\n      const handleColorChange = (event) => {\r\n        props.setUser(prevValues => (\r\n          {...prevValues,  color: event.target.value})\r\n          )\r\n      }\r\n\r\n      const handleRandomUsername = (event) => { \r\n        props.setUser(prevValues => (\r\n          {...prevValues,  username: randomName()})\r\n          )\r\n      };\r\n\r\n      const handleRandomColor = (event) => { \r\n        props.setUser(prevValues => (\r\n          {...prevValues,  color: props.randomColor()})\r\n          )\r\n      };\r\n\r\n      const handleAvatar = (avatar) => {\r\n        console.log(avatar);\r\n        let userAvatar\r\n    \r\n        switch (avatar) {\r\n          case 1: userAvatar = avatarWoman; break;\r\n          case 2: userAvatar = avatarMan; break;\r\n          case 3: userAvatar = avatarGirl; break;\r\n          case 4: userAvatar = avatarBoy; break;\r\n          default: console.log(\"Greška kod odabira avatara\")\r\n        }\r\n    \r\n        props.setUser(prevValues => ({ ...prevValues, avatar: userAvatar, avatarId: avatar}))\r\n      }\r\n    \r\n\r\n    return(\r\n        <div\r\n            className={\r\n                !usernameIsValid ? \"card login invalid\" : \"card login\"  \r\n            }\r\n            >\r\n          <form onSubmit={handleAddUser}>\r\n              <h1>Chat Application</h1>\r\n              <label>Type Your Nickname</label>\r\n              <input className=\"inputText\"\r\n              type='text'\r\n              placeholder='Your Nickname'\r\n              onChange={handleUsernameChange}\r\n              value={props.user.username}\r\n              /> \r\n              <h5 onClick={handleRandomUsername}>Random Nickname</h5>\r\n              <label>Choose Your Avatar</label>\r\n              <div className=\"avatars\">\r\n                <div className={`item ${props.user.avatarId === 1 ? 'active' : ''}`} onClick={() => handleAvatar(1)}>\r\n                  <img src={avatarWoman} alt=\"\" />\r\n                </div>\r\n                <div className={`item ${props.user.avatarId === 2 ? 'active' : ''}`} onClick={() => handleAvatar(2)}>\r\n                  <img src={avatarMan} alt=\"\" />\r\n                </div>\r\n                <div className={`item ${props.user.avatarId === 3 ? 'active' : ''}`} onClick={() => handleAvatar(3)}>\r\n                  <img src={avatarGirl} alt=\"\" />\r\n                </div>\r\n                <div className={`item ${props.user.avatarId === 4 ? 'active' : ''}`} onClick={() => handleAvatar(4)}>\r\n                  <img src={avatarBoy} alt=\"\" />\r\n                </div>\r\n              </div>\r\n              \r\n              <label>Select Your Color</label>\r\n              <input className=\"inputColor\" type=\"color\" onChange={handleColorChange} value={props.user.color}></input>\r\n              <h5 onClick={handleRandomColor}>Random Color</h5>\r\n              \r\n              <button type='submit' disabled={props.user.username.length <3}>Join Chat</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}","/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Login/nouns.js",[],[],"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Login/adjectives.js",[],[],"/Users/elenaderic/Desktop/Seminarski zadatak - Chat aplikacija - Elena Đerić/src/Components/Chat Messages/Emoji.js",["65"],[],"import React, { useState } from \"react\";\nimport Picker from 'emoji-picker-react';\n\nconst Emoji = () => {\n    const [inputStr, setInputStr] = useState('');\n    const [showPicker, setShowPicker] = useState(false);\n   \n    const onEmojiClick = (event, emojiObject) => {\n      setInputStr(prevInput => prevInput + emojiObject.emoji);\n      setShowPicker(false);\n    };\n  \n    return (\n      <div className=\"emoji\">\n        <div className=\"picker-container\">\n          <input\n            className=\"input-style\"\n            value={inputStr}\n            onChange={e => setInputStr(e.target.value)} />\n          <img\n            className=\"emoji-icon\"\n            src=\"https://icons.getbootstrap.com/assets/icons/emoji-smile.svg\"\n            onClick={() => setShowPicker(val => !val)} />\n          {showPicker && <Picker\n            pickerStyle={{ width: '100%' }}\n            onEmojiClick={onEmojiClick} />}\n        </div>\n      </div>\n    );\n  }\n\n  export default Emoji;",{"ruleId":"66","severity":1,"message":"67","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":19},{"ruleId":"66","severity":1,"message":"70","line":10,"column":8,"nodeType":"68","messageId":"69","endLine":10,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":11,"column":8,"nodeType":"68","messageId":"69","endLine":11,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":44,"column":6,"nodeType":"74","endLine":44,"endColumn":18,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":83,"column":4,"nodeType":"74","endLine":83,"endColumn":11,"suggestions":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"66","severity":1,"message":"82","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":23},{"ruleId":"66","severity":1,"message":"83","line":1,"column":25,"nodeType":"68","messageId":"69","endLine":1,"endColumn":34},{"ruleId":"66","severity":1,"message":"84","line":2,"column":16,"nodeType":"68","messageId":"69","endLine":2,"endColumn":22},{"ruleId":"66","severity":1,"message":"85","line":14,"column":12,"nodeType":"68","messageId":"69","endLine":14,"endColumn":27},{"ruleId":"66","severity":1,"message":"86","line":14,"column":29,"nodeType":"68","messageId":"69","endLine":14,"endColumn":47},{"ruleId":"66","severity":1,"message":"87","line":17,"column":12,"nodeType":"68","messageId":"69","endLine":17,"endColumn":18},{"ruleId":"66","severity":1,"message":"88","line":17,"column":20,"nodeType":"68","messageId":"69","endLine":17,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":20,"column":11,"nodeType":"91","endLine":23,"endColumn":58},"no-unused-vars","'avatarWoman' is defined but never used.","Identifier","unusedVar","'avatarGirl' is defined but never used.","'avatarBoy' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessageArray' needs the current value of 'user'.",["93"],"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'uuidv4' is defined but never used.","'enteredUsername' is assigned a value but never used.","'setEnteredUsername' is assigned a value but never used.","'avatar' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [isLoggedIn, user]",{"range":"100","text":"101"},"Update the dependencies array to be: [drone, user]",{"range":"102","text":"103"},[1120,1132],"[isLoggedIn, user]",[2090,2097],"[drone, user]"]